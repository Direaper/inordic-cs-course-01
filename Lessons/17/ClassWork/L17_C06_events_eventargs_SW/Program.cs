using System;
using System.IO;
using System.IO.Compression;

namespace L17_C06_events_eventargs_SW
{
	internal class Program
	{
		private static void Main(string[] args)
		{
			var gen = new RandomDataGenerator();
			gen.RandomDataGenerating += OnRandomDataGenerating;
			gen.RandomDataGenerated += OnRandomDataGenerated;

			var randomBytes = gen.GetRandomData(100000, 5000);

			// writing generated bytes to a binary file
			const string binaryFileName = "random.data";
			File.WriteAllBytes(binaryFileName, randomBytes);

			// zipping the binary file
			const string zipFileName = binaryFileName + ".zip";

			if (File.Exists(zipFileName))
			{
				File.Delete(zipFileName);
			}

			using (var zip = ZipFile.Open(binaryFileName + ".zip", ZipArchiveMode.Create))
			{
				zip.CreateEntryFromFile(binaryFileName, binaryFileName);
			}
		}

		private static void OnRandomDataGenerating(object sender, RandomDataGeneratingEventArgs e)
		{
			Console.WriteLine($"Generated {e.BytesDone} from {e.TotalBytes} byte(s)...");
		}

		private static void OnRandomDataGenerated(object sender, RandomDataGeneratedEventArgs e)
		{
			Console.WriteLine(
				"Generation done. Random data:\n{0}",
				Convert.ToBase64String(e.RandomData));
		}
	}
}
